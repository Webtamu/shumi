name: Distro Test
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.12.9']

    runs-on: ${{ matrix.os }}

    env:
      PYTHONIOENCODING: utf-8
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache Cargo registry and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Linux setup
      - name: Setup xvfb and dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 \
            libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 \
            libxcb-xinput0 libxcb-xfixes0 libxcb-shape0 libglib2.0-0 libgl1-mesa-dev \
            '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev \
            libxkbcommon-dev libxkbcommon-x11-dev portaudio19-dev

          sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &

      # macOS setup
      - name: Install Qt dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install qt@6
          echo "CMAKE_PREFIX_PATH=$(brew --prefix qt@6)" >> $GITHUB_ENV

      # Windows setup
      - name: Install Qt dependencies (Windows)
        if: runner.os == 'Windows'
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.0'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install pytest pytest-qt maturin

      - name: Build and install Rust extension
        shell: bash
        run: |
          maturin build --release --manifest-path app/backend/rslib/Cargo.toml -o dist
          # On Linux/macOS, glob works fine:
          pip install dist/*.whl
        if: runner.os != 'Windows'

      - name: Build and install Rust extension (Windows)
        shell: pwsh
        run: |
          maturin build --release --manifest-path app/backend/rslib/Cargo.toml -o dist
          $wheel = Get-ChildItem dist -Filter *.whl | Select-Object -First 1
          pip install $wheel.FullName
        if: runner.os == 'Windows'

      - name: Install project dependencies
        run: |
          python -m pip install --no-cache-dir -r requirements.txt

      - name: Compile test
        run: pytest tests/test_compile.py -v

      - name: Run auth unit tests
        run: pytest tests/test_auth.py -v
